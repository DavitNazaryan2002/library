plugins {
    id "idea"
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.neetry'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}


dependencies {
    implementation project(':book')
    implementation project(':user')

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:postgresql:1.19.5'
}

tasks.named('test') {
	useJUnitPlatform()
}

//bootJar {
//    mainClass = "com.neetry.library.LibraryApplication"
//}

// Integration Tests setup
sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration/java"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integration.java.srcDirs
        testResourceDirs += sourceSets.integration.resources.srcDirs
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    group "verification"
    useJUnitPlatform()
    reports {
        junitXml.required = true
    }
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

check.dependsOn integrationTest